#/****************************************************************************
# * Copyright © 2003-2012 Dorian C. Arnold, Philip C. Roth, Barton P. Miller *
# *                  Detailed MRNet usage rights in "LICENSE" file.          *
# ****************************************************************************/
# $Id: Makefile.in,v 1.14 2008/10/09 19:50:12 mjbrim Exp $

VERSION = "1.1"
VERSION_MAJOR = @VERSION_MAJOR@
VERSION_MINOR = @VERSION_MINOR@
VERSION_REV = @VERSION_REV@

ROOTDIR  = @libi_root@
BASEDIR  = $(ROOTDIR)/xplat
INCDIR   = $(BASEDIR)/include
SRCDIR   = $(BASEDIR)/src/lightweight

PLATDIR = @PLATFORM_BUILD@
BINDIR  = $(PLATDIR)/bin
LIBDIR  = $(PLATDIR)/lib
OBJDIR  = $(PLATDIR)/obj/xplat/ltwt
DEPDIR  = $(PLATDIR)/depends/xplat/ltwt

xplat_INCDIR = $(INCDIR)/xplat_lightweight
install_INCDIR = $(IINCDIR)/xplat_lightweight

VPATH = $(SRCDIR) 

TARGET           = $(LIBDIR)/libxplat_lightweight.a.$(VERSION)
TARGET_SO        = $(LIBDIR)/libxplat_lightweight.so.$(VERSION)
TARGET_LOWFAT    = $(LIBDIR)/libxplat_lightweight_r.a.$(VERSION)
TARGET_SO_LOWFAT = $(LIBDIR)/libxplat_lightweight_r.so.$(VERSION)

TARGET_SO_LIBS        = @LIBS_LIGHTWEIGHT@
TARGET_SO_LOWFAT_LIBS = @LIBS_LOWFAT@

TARGETS = $(TARGET)

ifeq ($(WANT_THREADSAFE_LTWT), yes)
    TARGETS += $(TARGET_LOWFAT)
endif

ifeq ($(BUILD_SHARED_LIBS), yes)
    TARGETS += $(TARGET_SO)
    SO_LIST = $(TARGET_SO)
    ifeq ($(WANT_THREADSAFE_LTWT), yes)
        TARGETS += $(TARGET_SO_LOWFAT)
        SO_LIST += $(TARGET_SO_LOWFAT)
    endif
endif 

XPLAT_LTWT_SRCS = $(SRCDIR)/Error-unix.c \
                  $(SRCDIR)/NetUtils.c \
                  $(SRCDIR)/NetUtils-unix.c \
                  $(SRCDIR)/PathUtils-unix.c \
                  $(SRCDIR)/Process-unix.c \
                  $(SRCDIR)/SocketUtils.c \
                  $(SRCDIR)/SocketUtils-unix.c \
                  $(SRCDIR)/map.c \
                  $(SRCDIR)/vector.c \
                  $(SRCDIR)/xplat_utils_lightweight.c

LOWFAT_SRCS = $(SRCDIR)/Mutex-pthread.c \
              $(SRCDIR)/Monitor-pthread.c \
              $(SRCDIR)/Thread-pthread.c

XPLAT_LOWFAT_SRCS = $(XPLAT_LTWT_SRCS) $(LOWFAT_SRCS)

XPLAT_HEADERS = $(wildcard $(xplat_INCDIR)/*.h)
INSTALL_HEADERS = $(addprefix $(install_INCDIR)/, $(notdir $(XPLAT_HEADERS)))

XPLAT_LTWT_OBJS = $(addprefix $(OBJDIR)/, $(patsubst %.c,%.o,$(notdir $(XPLAT_LTWT_SRCS))))
XPLAT_LOWFAT_OBJS = $(addprefix $(OBJDIR)/, $(patsubst %.c,%_r.o,$(notdir $(XPLAT_LOWFAT_SRCS))))
XPLAT_LTWT_DEPS = $(addprefix $(DEPDIR)/, $(patsubst %.c,%.d,$(notdir $(XPLAT_LTWT_SRCS))))
XPLAT_LOWFAT_DEPS = $(addprefix $(DEPDIR)/, $(patsubst %.c,%_r.d,$(notdir $(XPLAT_LOWFAT_SRCS))))

all: $(TARGETS)
	$(INSTALL_LIB_LINKS) $(LIBDIR) libxplat_lightweight $(VERSION_MAJOR) $(VERSION_MINOR) $(VERSION_REV) 
	if [ $(WANT_THREADSAFE_LTWT) = "yes" ] ; then \
	    $(INSTALL_LIB_LINKS) $(LIBDIR) libxplat_lightweight_r $(VERSION_MAJOR) $(VERSION_MINOR) $(VERSION_REV) ; \
	fi

sharedobj: $(SO_LIST)

$(TARGET): $(XPLAT_LTWT_OBJS)
	@echo Archiving `basename $@` ...
	$(AR) $(ARFLAGS) $@ $^
	$(RANLIB) $@

$(TARGET_LOWFAT): $(XPLAT_LOWFAT_OBJS)
	@echo Archiving `basename $@` ...
	$(AR) $(ARFLAGS) $@ $^
	$(RANLIB) $@

$(TARGET_SO): $(XPLAT_LTWT_OBJS)
	@echo Building `basename $@` ...
	$(CC) $(SOFLAGS) -o $@ $^ $(TARGET_SO_LIBS)

$(TARGET_SO_LOWFAT): $(XPLAT_LOWFAT_OBJS)
	@echo Building `basename $@` ...
	$(CC) $(SOFLAGS) -o $@ $^ $(TARGET_SO_LOWFAT_LIBS)

install-prep:
	for dir in $(ILIBDIR) $(install_INCDIR) ; do \
	    if [ ! -d $$dir ] ; then \
	        $(MKDIR_P) $$dir ; \
	        chmod 755 $$dir ; \
	    fi \
	done

$(INSTALL_HEADERS): $(install_INCDIR)/%: $(xplat_INCDIR)/%
	@echo Installing XPlat lightweight header $(<F)
	$(INSTALL_DATA) $< $(@D)

install: $(TARGETS) install-prep $(INSTALL_HEADERS)
	@echo Installing XPlat lightweight libraries
	$(INSTALL) $(TARGETS) $(ILIBDIR)/
	$(INSTALL_LIB_LINKS) $(ILIBDIR) libxplat_lightweight $(VERSION_MAJOR) $(VERSION_MINOR) $(VERSION_REV) 
	if [ $(WANT_THREADSAFE_LTWT) = "yes" ] ; then \
	    $(INSTALL_LIB_LINKS) $(ILIBDIR) libxplat_lightweight_r $(VERSION_MAJOR) $(VERSION_MINOR) $(VERSION_REV) ; \
	fi

clean:
	for file in $(XPLAT_LTWT_DEPS) $(XPLAT_LTWT_OBJS) \
		$(XPLAT_LOWFAT_DEPS) $(XPLAT_LOWFAT_OBJS) ; do \
	    if [ -e $$file ] ; then $(RM) $$file ; fi ; \
	done

# pattern rules
# @VERBOSEMAKE@
# .SUFFIXES:
# .SUFFIXES: .c .o .d

# add phony target to force serial build of xplat.
# this would not be needed if archive was built differently
# -- and then we could build in parallel
.NOTPARALLEL:

$(DEPDIR)/%.d: %.c
	@echo Building depends file `basename $@` ...
	$(MAKEDEPENDS)  $< $*.o $@ $(INCLUDES_LIGHTWEIGHT)

$(DEPDIR)/%_r.d: %.c
	@echo Building depends file `basename $@` ...
	$(MAKEDEPENDS)  $< $*.o $@ $(INCLUDES_LIGHTWEIGHT)

$(OBJDIR)/%.o: %.c
	@echo Compiling `basename $@` ...
	$(CC) $(CCFLAGS) -o $@ -c $<

$(OBJDIR)/%_r.o: %.c
	@echo Compiling `basename $@` ...
	$(CC) $(CCFLAGS) -o $@ -c $<

# make sure file dependencies are determiend and used
-include $(XPLAT_LTWT_DEPS)
-include $(XPLAT_LOWFAT_DEPS)
